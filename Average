import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Array<E> {

    public static int brojDoProsek(int arr[])
    {
        double average=0.0;
        int sum=0;
        int n = arr.length;
        int i = 0;
        int j = n;
        int mid = 0;
        for(int counter=0;counter<arr.length;counter++)
        {
            sum=sum+arr[counter];
        }
        average=(int)(sum/arr.length);

        for(int counter=0;counter< arr.length;counter++)
        {
            if(arr[counter]==(int)average)
            {
                return arr[counter];
            }
        }

        if (average <= arr[0])
            return arr[0];
        if (average >= arr[n - 1])
            return arr[n - 1];

        while (i < j) {
            mid = (i + j) / 2;
            if (arr[mid] == average)
                return arr[mid];

            if(average > arr[mid]){
                if (mid < n-1&&average < arr[mid + 1])
                    return getClosest(arr[mid], arr[mid + 1], (int)average);
                i = mid + 1;
            }

            else {
                if (mid > 0 && average > arr[mid - 1])
                    return getClosest(arr[mid - 1], arr[mid], (int)average);
                j = mid;
            }

        }
        return arr[mid];
    }


    public static int getClosest(int val1, int val2, int aver){
        if (aver - val1 <= val2 - aver)
            return val1;
        else
            return val2;
    }

    public static void main(String[] args) throws IOException{
        BufferedReader stdin = new BufferedReader( new InputStreamReader(System.in));
        String s = stdin.readLine();
        int N = Integer.parseInt(s);
        int elem=0;
        int[] niza= new int[N];
        for(int i=0;i< niza.length;i++)
        {
            s=stdin.readLine();
            elem=Integer.parseInt(s);
            niza[i]=elem;
        }

        Arrays.sort(niza);

        System.out.println(brojDoProsek(niza));
    }



}
